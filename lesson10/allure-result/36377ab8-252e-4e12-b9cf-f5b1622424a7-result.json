{"name": "Тест сложения чисел", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n\tGetHandleVerifier [0x00C23853+24035]\n\t(No symbol) [0x00BABBE4]\n\t(No symbol) [0x00A8C2D3]\n\t(No symbol) [0x00A6E00B]\n\t(No symbol) [0x00AF5F4F]\n\t(No symbol) [0x00B08E99]\n\t(No symbol) [0x00AEFC26]\n\t(No symbol) [0x00AC218C]\n\t(No symbol) [0x00AC310D]\n\tGetHandleVerifier [0x00EC9683+2800659]\n\tGetHandleVerifier [0x00F2423E+3172302]\n\tGetHandleVerifier [0x00F1CE52+3142626]\n\tGetHandleVerifier [0x00CC6C00+692624]\n\t(No symbol) [0x00BB4BFD]\n\t(No symbol) [0x00BB1908]\n\t(No symbol) [0x00BB1AA0]\n\t(No symbol) [0x00BA3F50]\n\tBaseThreadInitThunk [0x76CAFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x774A809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x774A806E+238]", "trace": "self = <test_calculator.CalculatorTests testMethod=test_addition>\n\n    @allure.title('Тест сложения чисел')\n    @allure.description('Проверка корректности выполнения операции сложения в калькуляторе.')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_addition(self):\n        \"\"\"Тест на сложение чисел.\"\"\"\n        with allure.step(\"Загрузка страницы калькулятора\"):\n            self.calculator_page.load()\n    \n        with allure.step(\"Установка задержки\"):\n            self.calculator_page.set_delay(45)\n    \n        with allure.step(\"Ввод чисел и операции\"):\n            self.calculator_page.click_number(7)\n            self.calculator_page.click_operator('+')\n            self.calculator_page.click_number(8)\n            self.calculator_page.click_operator('=')\n    \n        with allure.step(\"Ожидание результата\"):\n>           self.calculator_page.wait_for_result(\"15\")\n\ncalc\\test_calculator.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncalc\\calculator_page.py:59: in wait_for_result\n    self.wait_for_element_text(By.CLASS_NAME, \"screen\", expected_result)\ncalc\\base_page.py:34: in wait_for_element_text\n    return WebDriverWait(self.driver, timeout).until(\nC:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nC:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:243: in _predicate\n    element_text = driver.find_element(*locator).text\nC:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001730F70BE30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x774A809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x774A806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00C23853+24035]\nE       \t(No symbol) [0x00BABBE4]\nE       \t(No symbol) [0x00A8C2D3]\nE       \t(No symbol) [0x00A6E00B]\nE       \t(No symbol) [0x00AF5F4F]\nE       \t(No symbol) [0x00B08E99]\nE       \t(No symbol) [0x00AEFC26]\nE       \t(No symbol) [0x00AC218C]\nE       \t(No symbol) [0x00AC310D]\nE       \tGetHandleVerifier [0x00EC9683+2800659]\nE       \tGetHandleVerifier [0x00F2423E+3172302]\nE       \tGetHandleVerifier [0x00F1CE52+3142626]\nE       \tGetHandleVerifier [0x00CC6C00+692624]\nE       \t(No symbol) [0x00BB4BFD]\nE       \t(No symbol) [0x00BB1908]\nE       \t(No symbol) [0x00BB1AA0]\nE       \t(No symbol) [0x00BA3F50]\nE       \tBaseThreadInitThunk [0x76CAFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x774A809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x774A806E+238]\n\nC:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "description": "Проверка корректности выполнения операции сложения в калькуляторе.", "steps": [{"name": "Загрузка страницы калькулятора", "status": "passed", "start": 1729713921220, "stop": 1729713922779}, {"name": "Установка задержки", "status": "passed", "start": 1729713922779, "stop": 1729713922827}, {"name": "Ввод чисел и операции", "status": "passed", "start": 1729713922827, "stop": 1729713922904}, {"name": "Ожидание результата", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n\tGetHandleVerifier [0x00C23853+24035]\n\t(No symbol) [0x00BABBE4]\n\t(No symbol) [0x00A8C2D3]\n\t(No symbol) [0x00A6E00B]\n\t(No symbol) [0x00AF5F4F]\n\t(No symbol) [0x00B08E99]\n\t(No symbol) [0x00AEFC26]\n\t(No symbol) [0x00AC218C]\n\t(No symbol) [0x00AC310D]\n\tGetHandleVerifier [0x00EC9683+2800659]\n\tGetHandleVerifier [0x00F2423E+3172302]\n\tGetHandleVerifier [0x00F1CE52+3142626]\n\tGetHandleVerifier [0x00CC6C00+692624]\n\t(No symbol) [0x00BB4BFD]\n\t(No symbol) [0x00BB1908]\n\t(No symbol) [0x00BB1AA0]\n\t(No symbol) [0x00BA3F50]\n\tBaseThreadInitThunk [0x76CAFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x774A809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x774A806E+238]\n\n", "trace": "  File \"D:\\Новая папка\\skypro_python_homeworks\\lesson10\\calc\\test_calculator.py\", line 37, in test_addition\n    self.calculator_page.wait_for_result(\"15\")\n  File \"D:\\Новая папка\\skypro_python_homeworks\\lesson10\\calc\\calculator_page.py\", line 59, in wait_for_result\n    self.wait_for_element_text(By.CLASS_NAME, \"screen\", expected_result)\n  File \"D:\\Новая папка\\skypro_python_homeworks\\lesson10\\calc\\base_page.py\", line 34, in wait_for_element_text\n    return WebDriverWait(self.driver, timeout).until(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 243, in _predicate\n    element_text = driver.find_element(*locator).text\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Димасик\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1729713922904, "stop": 1729713924961}], "start": 1729713919366, "stop": 1729713927012, "uuid": "5ac7f2d0-06b5-4e27-a048-d0c7b3848584", "historyId": "5bf1c32f0a22eb8dd6bf8c6c7cf008f4", "testCaseId": "5bf1c32f0a22eb8dd6bf8c6c7cf008f4", "fullName": "calc.test_calculator.CalculatorTests#test_addition", "labels": [{"name": "feature", "value": "Калькулятор"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "calc"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "CalculatorTests"}, {"name": "host", "value": "DESKTOP-PVI8177"}, {"name": "thread", "value": "18232-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "calc.test_calculator"}]}